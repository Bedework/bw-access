<?xml version="1.0"?>

<!-- ===================================================================
     Define a macro to fetch jars from the bedework repository or from
     the generated library in the named project.

     The project will only be used if the property org.bedework.quickstart.build
     is defined.

     For jars fetched from the archive we have a two step process, first check
     that a copy in a local cache is up to date, second copy from the local cache
     into the final destination. This allows the caller to delete and recreate the
     destination, ensuring that jar version changes don't result in multiple
     copies of a jar.

     @param name     Name of the jar e.g. junit
     @param version  optional version for the jar
     @param src      optional url for the get task
     @param lib      optional destination for the get task
     @param libcache optional location of the cache
     @param project optional project name for local fetch from generated quickstart.
     =================================================================== -->
<project name="getJar" basedir="." default="">
  <macrodef name="getJar">
    <attribute name="name"/>
    <attribute name="version" default="" />
    <attribute name="src" default="http://bedework.org/downloads/lib"/>
    <attribute name="lib" default="${lib.dir}"/>
    <attribute name="libcache" default="@{lib}/../libcache"/>
    <attribute name="project" default="" />
    <sequential>
      <taskdef resource="net/sf/antcontrib/antcontrib.properties" />

      <mkdir dir="@{libcache}" />

      <if>
        <equals arg1="@{version}" arg2="" />
        <then>
          <var name="org.bedework.getjar.jarname" value="@{name}.jar" />
        </then>
        <else>
          <var name="org.bedework.getjar.jarname" value="@{name}-@{version}.jar" />
       </else>
      </if>

      <var name="org.bedework.getjar.dest"
           value="@{lib}/${org.bedework.getjar.jarname}" />

      <if>
        <or>
          <equals arg1="@{project}" arg2="" />
          <not>
            <isset property="org.bedework.quickstart.build" />
          </not>
        </or>
        <then>
          <echo message="Fetch ${org.bedework.getjar.jarname} from archive" />
          <get src="@{src}/${org.bedework.getjar.jarname}"
               dest="@{libcache}/${org.bedework.getjar.jarname}"
               ignoreerrors="true"
               verbose="true"
               usetimestamp="true"/>

          <copy file="@{libcache}/${org.bedework.getjar.jarname}"
                todir="@{lib}" overwrite="yes" />
        </then>
        <else>
          <var name="org.bedework.getjar.project.jar"
               value="${project.home}/../@{project}/libapi/${org.bedework.getjar.jarname}" />
          <echo message="check ${org.bedework.getjar.project.jar}" />

          <if>
            <not>
              <uptodate srcfile="${org.bedework.getjar.project.jar}"
                        targetfile="${org.bedework.getjar.dest}" />
            </not>
            <then>
              <echo message="Fetch ${org.bedework.getjar.jarname} from project ${project}" />
              <copy file="${org.bedework.getjar.project.jar}"
                    todir="@{lib}" overwrite="yes" />
            </then>
          </if>
       </else>
      </if>
    </sequential>
  </macrodef>
</project>
