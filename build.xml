<?xml version="1.0"?>

<!-- This is the ant build file for the access control suite.

     The target of interest is build which should leave a jar file
     in the dist directory..

     Authors: Mike Douglass   douglm rpi.edu
-->

<project name="access" default="build">
  <property environment="env"/>
  <dirname property="project.home" file="${ant.file}"/>

  <property file="${project.home}/build.properties" />

  <property name="bedework.home"
            location="${project.home}/../.." />

  <property name="build.dir" location="${bedework.home}/build"/>

  <projectDefs name="${org.bedework.package.name}"
               version="${org.bedework.access.version}" 
               subproject="true" />

  <import file="${build.dir}/buildTools/getJar.xml"/>

  <target name="init">
    <infoMsg message="* =========== Building ${project.name}" />
    
    <delete dir="${lib.dir}" />
    <mkdir dir="${lib.dir}" />

    <getJar name="junit" version="4.4" />
    <getJar name="log4j" version="1.2.8" />

    <getJar name="rpiutil" version="${org.bedework.rpiutil.version}" 
            project="rpiutil" />

    <property name="org.bedework.access.base" location="${project.home}" />
    <property name="org.bedework.accesstests.base" location="${project.home}/tests" />
    
    <mkdir dir="${dist.home}" />

    <property name="test.data.dir"
              location="${dist.home}/test-data" />

    <property name="test.reports.dir"
              location="${dist.home}/test-reports" />

    <property name="edu.rpi.cmt.access.empty.dir"
              location="${dist.home}/empty-dir" />
    <mkdir dir="${edu.rpi.cmt.access.empty.dir}" />

    <fileset id="empty.fileset" dir="${edu.rpi.cmt.access.empty.dir}"
             excludes="*" />

    <!-- default to empty -->
    <fileset id="buildjar.resource.files" refid="empty.fileset" />
    <fileset id="buildjar.generated.java.sources" refid="empty.fileset" />

    <property name="generated.jar.file"
              location="${dist.home}/${edu.rpi.cmt.access.jar}-${project.version}.jar" />

    <property name="test.jar.file"
              location="${dist.home}/${edu.rpi.cmt.access.jar}-test-${project.version}.jar" />

    <!-- ==================== Compilation Classpath ==================== -->

    <path id="compile.classpath">
      <fileset dir="${lib.dir}">
         <include name="*.jar"/>
      </fileset>
      <fileset dir="${dist.home}">
         <include name="*.jar"/>
      </fileset>
    </path>
  </target>

  <!-- =================================================================
       Clean out all library files from other projects and all generated
       files in preparation for a complete rebuild.

       Needed because switching versions leaves a load of old bedework
       generated stuff in the libraries.
       ================================================================= -->
  <target name="deep-clean" depends="clean">
    <delete dir="${lib.dir}" />
  </target>

  <!-- =================================================================
       Clean all generated files
       ================================================================= -->
  <target name="clean">
    <delete dir="${dist.home}" />
  </target>

  <!-- =================================================================
       Clean up after a build.
       ================================================================= -->
  <target name="cleanup">
    <delete dir="${edu.rpi.cmt.access.empty.dir}" />
  </target>

  <!-- ========================== Base build Targets ===================
       Here we have one target building the classes and interfaces that make
       up the access control suite.
       ================================================================= -->

  <target name="clean-build" depends="clean,build"
          description="Clean and compile access control classes"/>

  <target name="clean-build-all" depends="clean,build-all"
          description="Clean and compile access control classes"/>

  <target name="build" depends="init,build-source,cleanup"
          description="Compile access control classes"/>

  <target name="build-all" depends="build"
          description="Compile access control classes"/>

  <target name="build-source">
    <build-jar module-base="${org.bedework.access.base}" 
               jar-file="${generated.jar.file}" />
  </target>

  <target name="build-test">
    <build-jar module-base="${org.bedework.accesstests.base}" 
               jar-file="${test.jar.file}" />
  </target>

  <!-- =================================================================
                            javadoc.
       ================================================================= -->
  <target name="javadoc" depends="init"
          description="Create Javadoc API documentation">
    <property name="destdir" location="${dist.home}/docs/api"/>
    <mkdir dir="${destdir}"/>

    <javadoc sourcepath="${source.home}"
           classpathref="compile.classpath"
                destdir="${destdir}"
           packagenames="edu.rpi.cmt.access.*"
                 access="public"
                 author="true"
                version="true"
          breakiterator="yes"
            windowtitle="${project.name} ${project.version} API Documentation">
      <doctitle><![CDATA[${project.name} ${project.version}<br/>API Documentation]]></doctitle>
      <header><![CDATA[${project.name} ${project.version}<br/>API Documentation]]></header>
      <link href="../../rpiutil/api" />
      <link href="${env.JAVA_HOME}/docs/api" />
    </javadoc>
  </target>

  <!-- =================================================================
                            unittest.
       ================================================================= -->
  <target name="unittest" depends="init,build-source,build-test,run-unittest,cleanup"
          description="Test the access control classes"/>

  <target name="run-unittest" depends="init" >
    <!-- ................................................................
                            unpackthe tests jar
         ............................................................... -->
    <delete dir="${dist.home}/tests" />
    <mkdir dir="${dist.home}/tests" />
    <unjar src="${test.jar.file}" dest="${dist.home}/tests"/>

    <mkdir dir="${dist.home}/classes" />
    <copy file="${build.dir}/log4j.xml" todir="${dist.home}/classes"/>

    <path id="test.class.path">
      <fileset dir="${dist.home}">
        <include name="*.jar"/>
      </fileset>

      <fileset dir="${lib.dir}">
        <include name="*.jar"/>
      </fileset>

      <pathelement path="${dist.home}/classes"/>
    </path>

    <pathconvert property="test.classpath.string"
                 pathSep=":">
      <path refid="test.class.path" />
    </pathconvert>

    <mkdir dir="${test.data.dir}" />

    <mkdir dir="logs" />

    <echo message="CP=${test.classpath.string}" />
    <junit printsummary="no"
           errorProperty="test.failed"
           failureProperty="test.failed"
           fork="true">
      <classpath>
        <path refid="test.class.path"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <formatter type="brief" usefile="false"/>
<!--      <formatter type="xml"/> -->
      <test name="${testcase}" todir="${test.data.dir}" if="testcase"/>
      <batchtest todir="${test.data.dir}" unless="testcase">
        <fileset dir="${dist.home}/tests" includes="**/*Test.class"/>
      </batchtest>
    </junit>

    <junitreport todir="${test.data.dir}">
      <fileset dir="${test.data.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports.dir}"/>
    </junitreport>

    <fail message="Tests failed. Check log and/or reports." if="test.failed"/>
  </target>
</project>
