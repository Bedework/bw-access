<?xml version="1.0"?>

<!-- This is the ant build file for the access control suite.

     The target of interest is build which should leave a jar file
     in the dist directory..

     Authors: Mike Douglass   douglm rpi.edu
-->

<project name="access" default="deploy"
         xmlns:artifact="antlib:org.apache.maven.artifact.ant">
  <taskdef resource="net/sf/antcontrib/antcontrib.properties" />

  <property environment="env"/>
  <dirname property="project.home" file="${ant.file}"/>

  <property name="bedework.home"
            location="${project.home}/../bedework" />

  <property name="build.dir" location="${bedework.home}/build"/>

  <import file="${build.dir}/buildTools/deftasks.xml"/>

  <deftasks/>

  <projectDefs name="RPI access control package"
               version="${org.bedework.access.version}" 
               subproject="true" />

  <target name="init">
    <projectInit/>
    
    <property name="org.bedework.access.base" location="${project.home}" />
    <property name="org.bedework.accesstests.base" location="${project.home}/tests" />
    
    <property name="generated.jar.file"
              location="${dist.home}/rpiaccess-${project.version}.jar" />

    <property name="test.jar.file"
              location="${dist.home}/rpiaccess-test-${project.version}.jar" />
  </target>
  
  <target name="build-init" depends="init">
    <!--
    <getJar name="junit" version="4.4" />
    <getJar name="log4j" version="1.2.8" />

    <getJar name="rpiutil" version="${org.bedework.rpiutil.version}" 
            project="rpiutil" />
            -->
    
    <!--
    <artifact:pom id="the-pom" file="pom.xml" />
    
    <artifact:dependencies filesetId="dependency.fileset" 
                           useScope="runtime" pomRefId="the-pom">
    </artifact:dependencies>
    
    <copy todir="${lib.dir}">
      <fileset refid="dependency.fileset" />
      <mapper type="flatten" />
    </copy>
    -->
    <resolveDependencies pomFile="pom.xml" />
  </target>

  <target name="build-source" depends="build-init">
    <build-jar module-base="${org.bedework.access.base}" 
               jar-file="${generated.jar.file}" />
    
    <installJar dir="${org.bedework.access.base}" name="${generated.jar.file}"/>
  </target>

  <target name="build-test" depends="build-init">
    <build-jar module-base="${org.bedework.accesstests.base}" 
               jar-file="${test.jar.file}" />
  </target>
  
  <target name="deploy" depends="deploy-init,build" >
    <deployJar dir="${org.bedework.access.base}" name="${generated.jar.file}"/>
  </target>

  <!-- =================================================================
                            unittest.
       ================================================================= -->
  <target name="unittest" depends="init,build-source,build-test,run-unittest,cleanup"
          description="Test the access control classes"/>

  <target name="run-unittest" depends="init" >
    <!-- ................................................................
                            unpackthe tests jar
         ............................................................... -->
    <delete dir="${dist.home}/tests" />
    <mkdir dir="${dist.home}/tests" />
    <unjar src="${test.jar.file}" dest="${dist.home}/tests"/>

    <mkdir dir="${dist.home}/classes" />
    <copy file="${build.dir}/log4j.xml" todir="${dist.home}/classes"/>

    <path id="test.class.path">
      <fileset dir="${dist.home}">
        <include name="*.jar"/>
      </fileset>

      <fileset dir="${lib.dir}">
        <include name="*.jar"/>
      </fileset>

      <pathelement path="${dist.home}/classes"/>
    </path>

    <pathconvert property="test.classpath.string"
                 pathSep=":">
      <path refid="test.class.path" />
    </pathconvert>

    <mkdir dir="${test.data.dir}" />

    <mkdir dir="logs" />

    <echo message="CP=${test.classpath.string}" />
    <junit printsummary="no"
           errorProperty="test.failed"
           failureProperty="test.failed"
           fork="true">
      <classpath>
        <path refid="test.class.path"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <formatter type="brief" usefile="false"/>
<!--      <formatter type="xml"/> -->
      <test name="${testcase}" todir="${test.data.dir}" if="testcase"/>
      <batchtest todir="${test.data.dir}" unless="testcase">
        <fileset dir="${dist.home}/tests" includes="**/*Test.class"/>
      </batchtest>
    </junit>

    <junitreport todir="${test.data.dir}">
      <fileset dir="${test.data.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports.dir}"/>
    </junitreport>

    <fail message="Tests failed. Check log and/or reports." if="test.failed"/>
  </target>
</project>
